{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactDetail","e","deleteContact","_ref","delete","t0","_x","_x2","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","float","color","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","errors","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","PageNotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e178e13.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n  const {branding} = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home mr-2\"></i>Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus mr-2\"></i>Add</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question mr-2\"></i>About</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'MyApp'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Application to manage your contacts.</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;","import React, {Component} from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  }\n\n  async componentDidMount() {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      contacts: response.data\n    });\n  }\n\n  render() {\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport {Consumer} from \"../../context\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContactDetail: false\n    }\n  }\n\n  showContactDetail = (e) => {\n    this.setState({\n      showContactDetail: !this.state.showContactDetail\n    })\n  }\n\n  deleteContact = async(id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch (e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  }\n\n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const {showContactDetail} = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4>{name}\n                <i onClick={this.showContactDetail} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\n                <i onClick={this.deleteContact.bind(this, id, dispatch)} className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}}></i>\n                <Link to={`/contact/edit/${id}`}><i className=\"fas fa-pencil-alt mr-3\" style={{cursor: 'pointer', float: 'right', color: 'black'}}></i></Link>\n              </h4>\n              {showContactDetail ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const {contacts} = value;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-3\">\n                Contacts List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />))\n              }\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    name,\n    label,\n    placeholder,\n    value,\n    type,\n    onChange,\n    error\n  }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {'is-invalid': error})}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\nexport default TextInputGroup;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = async(dispatch, e) => {\n    e.preventDefault();\n\n    const {name, email, phone} = this.state;\n\n    /*form validation*/\n    if(name === \"\") {\n      this.setState({errors: {name: 'Name field is required.'}});\n      return;\n    }\n    if(email === \"\") {\n      this.setState({errors: {email: 'Email field is required.'}});\n      return;\n    }\n    if(phone === \"\") {\n      this.setState({errors: {phone: 'Phone field is required.'}});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const response = await axios.post('https://jsonplaceholder.typicode.com/users/',newContact);\n    dispatch({type: 'ADD_CONTACT', payload: response.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    }\n  }\n\n  async componentDidMount() {\n    const {id} = this.props.match.params;\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = response.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = async(dispatch, e) => {\n    e.preventDefault();\n\n    const {name, email, phone} = this.state;\n\n    /*form validation*/\n    if(name === \"\") {\n      this.setState({errors: {name: 'Name field is required.'}});\n      return;\n    }\n    if(email === \"\") {\n      this.setState({errors: {email: 'Email field is required.'}});\n      return;\n    }\n    if(phone === \"\") {\n      this.setState({errors: {phone: 'Phone field is required.'}});\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    }\n    const {id} = this.props.match.params;\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n    dispatch({type:'UPDATE_CONTACT', payload: response.data})\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\n\nconst PageNotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page doesn't exist.</p>\n    </div>\n  );\n};\n\nexport default PageNotFound;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport PageNotFound from './components/pages/PageNotFound';\n\nimport {Provider} from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"ContactManager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route component={PageNotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}